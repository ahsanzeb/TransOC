(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



OneDLatticeWays[Ntot_,Ds_,Phis_]:=Module[{DhopsR,DhopsL,DPhiR,DPhiL,
PhihopsR,PhihopsL,CDhopsR,CDhopsL,
CPhihopsR,CPhihopsL,LDs,LPhis,xD,xPhi,Apairs,CAR,CAL},
DhopsR={};DhopsL={};DPhiR={};DPhiL={};
PhihopsR={};PhihopsL={};
CDhopsR={};CDhopsL={};CPhihopsR={};CPhihopsL={};
CAL={};CAR={};Apairs={};
LDs=Length[Ds];LPhis=Length[Phis];
(*find R/L hops for Ds and DPhi R/L pairs *)
If[LDs>0,
Do[
xD=Ds[[i]];
If[MemberQ[Phis,xD+1],AppendTo[DPhiR,xD],
If[xD!= Ntot&&FreeQ[Ds,xD+1],AppendTo[DhopsR,xD]]];
If[MemberQ[Phis,xD-1],AppendTo[DPhiL,xD],
If[xD!= 1&&FreeQ[Ds,xD-1],AppendTo[DhopsL,xD]]];
If[xD==1,AppendTo[CDhopsL,xD]];
If[xD==Ntot,AppendTo[CDhopsR,xD]];
,{i,1,LDs}];
];
(* find R/L hops for Phis *)
If[LPhis>0,
Do[
xPhi=Phis[[i]];
If[FreeQ[Phis,xPhi+1]&&FreeQ[Ds,xPhi+1]&&xPhi!= Ntot,
AppendTo[PhihopsR,xPhi],
If[FreeQ[Phis,xPhi-1]&&FreeQ[Ds,xPhi-1]&&xPhi!= 1,
AppendTo[PhihopsL,xPhi]]
];
If[xPhi==1,AppendTo[CPhihopsL,xPhi]];
If[xPhi==Ntot,AppendTo[CPhihopsR,xPhi]];
,{i,1,LPhis}];
];
(*Apairs,CAR,CAL*)
Do[
If[Intersection[Join[Ds,Phis],{i,i+1}]=={},
AppendTo[Apairs,i]];
,{i,1,Ntot-1}];
If[FreeQ[Ds,1]&&FreeQ[Phis,1],AppendTo[CAL,1]];
If[FreeQ[Ds,Ntot]&&FreeQ[Phis,Ntot],AppendTo[CAR,Ntot]];
{DhopsR,DhopsL,PhihopsR,PhihopsL,DPhiR,DPhiL,
CDhopsR,CDhopsL,CPhihopsR,CPhihopsL,Apairs,CAR,CAL}];
